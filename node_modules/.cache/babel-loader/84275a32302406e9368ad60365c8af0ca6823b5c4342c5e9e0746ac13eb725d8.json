{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pond_App_Frontend_git\\\\Pond_app_Frontend\\\\src\\\\Components\\\\Feed_Stock_view.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedListComponent = () => {\n  _s();\n  const [feeds, setFeeds] = useState([]); // Initialized as an empty array\n  const [groupedFeeds, setGroupedFeeds] = useState({});\n  const navigate = useNavigate();\n  const handleBackClick = () => {\n    navigate('/feed-stock'); // Navigate to the home page\n  };\n\n  // Fetch data from the backend API\n  useEffect(() => {\n    const fetchFeeds = async () => {\n      try {\n        const response = await fetch('https://pond-app-backend.vercel.app/feeds');\n        const data = await response.json();\n\n        // Log data to verify its structure\n        console.log('API Response:', data);\n\n        // Ensure data is an array before setting it in the state\n        if (Array.isArray(data)) {\n          setFeeds(data);\n\n          // Group feeds by name and sum their counts\n          const grouped = data.reduce((acc, feed) => {\n            if (acc[feed.feed_name]) {\n              acc[feed.feed_name] += feed.feed_count;\n            } else {\n              acc[feed.feed_name] = feed.feed_count;\n            }\n            return acc;\n          }, {});\n          setGroupedFeeds(grouped);\n        } else {\n          console.error('Error: Data is not an array');\n        }\n      } catch (error) {\n        console.error('Error fetching feed data:', error);\n      }\n    };\n    fetchFeeds();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-arrow\",\n      onClick: handleBackClick,\n      children: \"\\u2190 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Total Feed Count by Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Feed Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(groupedFeeds).length > 0 ? Object.keys(groupedFeeds).map((feed_name, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: feed_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: groupedFeeds[feed_name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Feed Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Feed Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Feed Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: feeds.length > 0 ? feeds.map((feed, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: feed.feed_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: feed.feed_count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: feed.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: \"No feeds available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n// uygcug\n_s(FeedListComponent, \"Ow7I6HoDEqdKfYOLwsto9NN5LO0=\", false, function () {\n  return [useNavigate];\n});\n_c = FeedListComponent;\nexport default FeedListComponent;\nvar _c;\n$RefreshReg$(_c, \"FeedListComponent\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","FeedListComponent","_s","feeds","setFeeds","groupedFeeds","setGroupedFeeds","navigate","handleBackClick","fetchFeeds","response","fetch","data","json","console","log","Array","isArray","grouped","reduce","acc","feed","feed_name","feed_count","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","border","Object","keys","length","map","index","colSpan","message","_c","$RefreshReg$"],"sources":["C:/Pond_App_Frontend_git/Pond_app_Frontend/src/Components/Feed_Stock_view.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst FeedListComponent = () => {\r\n  const [feeds, setFeeds] = useState([]);  // Initialized as an empty array\r\n  const [groupedFeeds, setGroupedFeeds] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n  const handleBackClick = () => {\r\n    navigate('/feed-stock'); // Navigate to the home page\r\n  };\r\n\r\n  // Fetch data from the backend API\r\n  useEffect(() => {\r\n    const fetchFeeds = async () => {\r\n      try {\r\n        const response = await fetch('https://pond-app-backend.vercel.app/feeds');\r\n        const data = await response.json();\r\n\r\n        // Log data to verify its structure\r\n        console.log('API Response:', data);\r\n\r\n        // Ensure data is an array before setting it in the state\r\n        if (Array.isArray(data)) {\r\n          setFeeds(data);\r\n\r\n          // Group feeds by name and sum their counts\r\n          const grouped = data.reduce((acc, feed) => {\r\n            if (acc[feed.feed_name]) {\r\n              acc[feed.feed_name] += feed.feed_count;\r\n            } else {\r\n              acc[feed.feed_name] = feed.feed_count;\r\n            }\r\n            return acc;\r\n          }, {});\r\n          \r\n          setGroupedFeeds(grouped);\r\n        } else {\r\n          console.error('Error: Data is not an array');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching feed data:', error);\r\n      }\r\n    };\r\n\r\n    fetchFeeds();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"back-arrow\" onClick={handleBackClick}>\r\n        &#8592; {/* Unicode for left arrow */}\r\n      </div>\r\n\r\n      <h2>Total Feed Count by Name</h2>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Feed Name</th>\r\n            <th>Total Count</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(groupedFeeds).length > 0 ? (\r\n            Object.keys(groupedFeeds).map((feed_name, index) => (\r\n              <tr key={index}>\r\n                <td>{feed_name}</td>\r\n                <td>{groupedFeeds[feed_name]}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"2\">No data available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h2>All Feed Records</h2>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Feed Name</th>\r\n            <th>Feed Count</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {feeds.length > 0 ? (\r\n            feeds.map((feed, index) => (\r\n              <tr key={index}>\r\n                <td>{feed.feed_name}</td>\r\n                <td>{feed.feed_count}</td>\r\n                <td>{feed.message}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\">No feeds available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n// uygcug\r\n\r\nexport default FeedListComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}